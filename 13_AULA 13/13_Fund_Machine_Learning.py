{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOu4KkHAnQCilc1+gpdQOOe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Demonstra√ß√£o Extra√ß√£o de Dados\n","###Fundamentos de Big Data e Data Science\n","###Aula 13\n","###Prof. Msc. Ailton J. Santos"],"metadata":{"id":"83HI97yZ9H2S"}},{"cell_type":"markdown","source":["### Obtendo fundamenta√ß√£o da Machine Learning"],"metadata":{"id":"sYo6kWoN9PTV"}},{"cell_type":"markdown","source":["Problema cl√°ssico de Machine Learning - Identificando um üêñ e um üêï atrav√©s de suas caracter√≠sticas "],"metadata":{"id":"LtjhlpiF9saJ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"pWGQagAP4xMj"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.svm import LinearSVC"]},{"cell_type":"markdown","source":["O scikit-learn √© uma biblioteca da linguagem Python desenvolvida especificamente para aplica√ß√£o pr√°tica de machine learning.\n","\n","Esta biblioteca disp√µe de ferramentas simples e eficientes para an√°lise preditiva de dados, √© reutiliz√°vel em diferentes situa√ß√µes, possui c√≥digo aberto, sendo acess√≠vel a todos e foi constru√≠da sobre os pacotes NumPy, SciPy e matplotilib.\n","\n","O sklearn est√° organizado em muitos m√≥dulos, cada um desenvolvido para uma finalidade espec√≠fica. Nestes m√≥dulos encontraremos fun√ß√µes para as mais diferentes aplica√ß√µes.\n","\n","Analisando estas diferentes aplica√ß√µes entenderemos a organiza√ß√£o da biblioteca, e como encontrar o que buscamos.\n","\n","Pr√©-processamento ‚Äì normalmente esta √© a etapa mais trabalhosa no desenvolvimento de um modelo de machine learning. Como j√° vimos, o NumPy e o Pandas s√£o largamente utilizados nesta etapa, mas tamb√©m teremos fun√ß√µes para esta finalidade no sklearn, pensadas especialmente para tratamento de dados que alimentar√£o algoritmos de machine learning.\n","Classifica√ß√£o ‚Äì desenvolvimento de modelos capazes de detectar a qual categoria pr√©-determinada um elemento pertence. Podemos identificar se um aluno foi reprovado ou aprovado, se uma pessoa possui ou n√£o determinada doen√ßa, ou ainda qual doen√ßa uma pessoa pode ter dentre v√°rias poss√≠veis, dentre muitas outras possibilidades.\n","Regress√£o ‚Äì desenvolvimento de modelos que podem atribuir um valor cont√≠nuo a um elemento. Podemos prever o pre√ßo de um im√≥vel, altura de uma pessoa, quantidade de vendas de um produto, e assim por diante.\n","Clusteriza√ß√£o ‚Äì desenvolvimento de modelos para detec√ß√£o autom√°tica de grupos com caracter√≠sticas similares em seus integrantes. Podemos identificar clientes com comportamentos parecidos, grupos de risco de determinada doen√ßa, verificar padr√µes entre moradores de uma cidade, e muitos outros agrupamentos.\n","Redu√ß√£o de dimensionalidade ‚Äì reduzir o n√∫mero de vari√°veis em um problema. Com esta redu√ß√£o podemos diminuir consideravelmente a quantidade de c√°lculos necess√°rios em um modelo, aumentando a efici√™ncia, com uma perde m√≠nima de assertividade.\n","Ajuste de par√¢metros ‚Äì comparar, validar e escolher par√¢metros e modelos, de maneira automatizada. Podemos facilmente comparar diferentes par√¢metros no ajuste de um modelo, encontrando assim a melhor configura√ß√£o para a aplica√ß√£o em quest√£o.\n","\n","Fonte: https://scikit-learn.org/stable/"],"metadata":{"id":"geBuu-Vq-PAw"}},{"cell_type":"code","source":["porco1=[0,1,0] # pelo, au-au,rabo\n","porco2=[0,1,1]\n","porco3=[1,1,0]"],"metadata":{"id":"I-l19GDq4-i7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Caracter√≠sticas:\n","\n","- Pelo (Tem pelo curto ou pelo Longo)\n","- Latir (Faz \"Au-Au?\")\n","- Rabo (Tem rabo curto ou longo?)\n","\n","Para isso nos baseamos em:\n","\n","--------------------\n","0 - Tem pelo curto\n","1 - Tem pelo longo\n","--------------------\n","--------------------\n","0 - N√£o faz \"Au-Au\"\n","1 - Faz \"Au-Au\"\n","--------------------\n","--------------------\n","0 - Tem rabo curto \n","1 - Tem rabo longo\n","--------------------\n","\n"],"metadata":{"id":"ATzVtct7-uHY"}},{"cell_type":"code","source":["cachorro1=[0,1,1]\n","cachorro2=[1,0,1]\n","cachorro3=[1,1,1]"],"metadata":{"id":"R5qipAGU5MRa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["treino_x= [porco1, porco2, porco3, cachorro1, cachorro2, cachorro3]\n","treino_y = [1,1,1,0,0,0] # 0 cachorro, 1 porco"],"metadata":{"id":"c_gR1hQy5aQ2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Para isso nos baseamos em:\n","\n","--------------------\n","0 - Cachorro \n","1 - Porco\n","--------------------"],"metadata":{"id":"42L4Q9jw_1gy"}},{"cell_type":"code","source":["modelo = LinearSVC()"],"metadata":{"id":"V_jdMUl26P6g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modelo.fit (treino_x, treino_y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"bApoKt5H7t4n","executionInfo":{"status":"ok","timestamp":1679079481027,"user_tz":180,"elapsed":295,"user":{"displayName":"Tom Santos","userId":"11257308152908684043"}},"outputId":"6766f2d7-c752-4dc8-bff7-7e391e6edf3f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearSVC()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearSVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearSVC</label><div class=\"sk-toggleable__content\"><pre>LinearSVC()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["animal_misterioso = [1,1,1]\n","modelo.predict([animal_misterioso])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YdzymXwI5p__","executionInfo":{"status":"ok","timestamp":1679079510105,"user_tz":180,"elapsed":4,"user":{"displayName":"Tom Santos","userId":"11257308152908684043"}},"outputId":"4bb91f19-ad7e-4f3e-db3a-cd93cde7ca53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":[],"metadata":{"id":"GPTKgCP87KLO"},"execution_count":null,"outputs":[]}]}
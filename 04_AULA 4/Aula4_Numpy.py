# -*- coding: utf-8 -*-
"""Aula4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zoXLD06nfanDoJtUDa9cJiliQg0Vz8fM

#Numpy
###Python para Data Science
###Aula 4
###Msc. Ailton Santos

#Importar Biblioteca
"""

import numpy as np

"""#Gerar Dados Aleatórios

##Gerar um NDArray de 2x3 (duas lista com 3 elementos)
"""

dados=np.random.rand(2,3)

dados

"""#Tipo do Array"""

dados.dtype

"""#Tamanho e quantidade de dimensões"""

dados.shape

dados.ndim

"""#Criar ndarray usando a função array
##Ao criar o array a função array tenta utilizar o melhor tipo de dado
"""

lista=[1,2,5,7.8,1.25]

dados2=np.array(lista)

dados2

lista2=[[1,2,3,4],[4,3,2,1]]

dados3=np.array(lista2)

dados3

"""#Outras maneiras de criar arrays"""

dadoszero=np.zeros(10)

dadoszero

dadoszero2=np.zeros((2,3))

dadoszero2

dadosum=np.ones(5)

dadosum

dadosseq=np.arange(10)

dadosseq

dadosseq2=np.arange(0,20,2)

dadosseq2

dadosseq.dtype

dadosseqf=dadosseq.astype(np.float64)

dadosseqf

dadosseqf.dtype

"""#Aritmética com Arrays"""

dados4=np.array([[1,2,3],[4,5,6]])

dados4

dados4*dados4

dados4-dados4

1/dados4

dados5=dados4+dados4

dados5

dados4

dados5>dados4

"""#Indexação"""

dadosseq

dadosseq[5]

"""## Diferente de uma lista python, um recorte (fatia) de um ndarray sofrerá broadcast - é como se fosse uma view de bando de dados.
##Com conjuntos imensos de dados isso é uma grande vantagem em relação a performance
"""

dadosseq[3:6]

dadosseq[3:6]=20

dadosseq

fatiadados=dadosseq[2:4]

fatiadados

fatiadados[1]=2000

fatiadados

dadosseq

fatiadados[:]=333

dadosseq

"""#Copiar dados"""

fatia2=dadosseq[2:4].copy()

fatia2

fatia2[:]=111

fatia2

dadosseq

"""#Array com mais de uma dimensão"""

dados6=np.array([[1,2,3],[4,5,6],[7,8,9]])

dados6

dados6[1,2]

"""#Máscaras"""

dadosseq

mascara=(dadosseq<100)

mascara

dadosseq[dadosseq<20]=8888

dadosseq

"""#Transposição"""

dados7=np.arange(15).reshape((3,5))

dados7

dados7.T

"""#Multiplicação de Matrizes com Dots"""

np.dot(dados7.T,dados7)

"""# Vejam que há muitas outras funções que podem ser exploradas como: sin, cos, power, mod, sqrt entre outros"""
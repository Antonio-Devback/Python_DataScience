# -*- coding: utf-8 -*-
"""Aula3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oEwUrogpj-hkk7K-t6doEJwvvOej-Xqt

Você é um professor e coletou as notas de um teste final de uma turma. No entanto, há alguns pontos que você precisa analisar:

Alguns alunos podem ter tido notas muito baixas ou muito altas, o que pode indicar problemas ou desempenhos excepcionais.
Você quer entender a distribuição geral das notas, não apenas a média.
Você precisa decidir se o conjunto de notas é tratado como uma "amostra" ou como a "população" total de notas para os cálculos de desvio padrão e variância.
"""

import statistics

# 1. Geração dos Dados
# Notas de um teste final (0 a 100)
# Incluindo alguns valores que podem ser considerados extremos
notas_teste_final = [
    75, 82, 60, 90, 78, 55, 88, 70, 65, 80,
    92, 68, 72, 85, 95, 50, 73, 79, 81, 62,
    98, 45, 83, 76, 69, 100, 40, 87, 71, 66,
    5,  # Um aluno com nota muito baixa
    102, # Um possível erro de digitação ou nota extra (acima de 100)
    10, # Outra nota baixa
    99
]

print("--- Dados Simulados ---")
print("Notas Brutas:", notas_teste_final)
print("\n")

# 2. Pré-análise e Preparação (Simulada)

# Ordenar a lista para facilitar a identificação de quartis e min/max
notas_ordenadas = sorted(notas_teste_final)
print("Notas Ordenadas:", notas_ordenadas)

# Identificar min/max
nota_minima = min(notas_ordenadas)
nota_maxima = max(notas_ordenadas)

print(f"\nNota Mínima Registrada: {nota_minima}")
print(f"Nota Máxima Registrada: {nota_maxima}")

# Alerta simples sobre valores extremos (apenas para ilustração)
if nota_minima < 0 or nota_minima > 100:
    print(f"ATENÇÃO: Nota mínima ({nota_minima}) fora do intervalo esperado (0-100). Verificar dados.")
if nota_maxima < 0 or nota_maxima > 100:
    print(f"ATENÇÃO: Nota máxima ({nota_maxima}) fora do intervalo esperado (0-100). Verificar dados.")
print("\n")

# 3. Análise Estatística Detalhada

print("--- Análise Estatística Detalhada ---")

tamanho_amostra = len(notas_ordenadas)
print(f"Número total de notas (tamanho da amostra/população): {tamanho_amostra}")

# Média
media_notas = statistics.mean(notas_ordenadas)
print(f"Média das notas: {media_notas:.2f}")

# Mediana (Q2)
mediana_notas = statistics.median(notas_ordenadas)
print(f"Mediana (Q2) das notas: {mediana_notas:.2f}")

# Desvio Padrão
print("\n--- Desvio Padrão ---")
# Se as notas são de TODOS os alunos que você quer analisar (sua "população")
desvio_padrao_populacional = statistics.pstdev(notas_ordenadas)
print(f"Desvio Padrão Populacional (pstdev): {desvio_padrao_populacional:.2f}")

# Se essas notas são apenas uma AMOSTRA de um grupo maior de alunos (e você quer inferir)
desvio_padrao_amostral = statistics.stdev(notas_ordenadas)
print(f"Desvio Padrão Amostral (stdev): {desvio_padrao_amostral:.2f}")
print("Nota: 'pstdev' divide por N; 'stdev' divide por N-1 (para estimativa não viciada).")

# Variância
print("\n--- Variância ---")
variancia_populacional = statistics.pvariance(notas_ordenadas)
print(f"Variância Populacional (pvariance): {variancia_populacional:.2f}")

variancia_amostral = statistics.variance(notas_ordenadas)
print(f"Variância Amostral (variance): {variancia_amostral:.2f}")
print("Nota: 'pvariance' divide por N; 'variance' divide por N-1.")


# Cálculo dos Quartis (Q1, Q2, Q3) - Manualmente para Q1 e Q3
print("\n--- Quartis ---")

# Mediana já é Q2
print(f"Segundo Quartil (Q2 - Mediana): {mediana_notas:.2f}")

# Para Q1: Mediana da primeira metade dos dados
# A função statistics.median_low e median_high poderiam ser usadas dependendo do tamanho da lista.
# Para simplificar aqui, vamos dividir a lista ao meio.
mid_point = len(notas_ordenadas) // 2
primeira_metade = notas_ordenadas[:mid_point]
q1 = statistics.median(primeira_metade)
print(f"Primeiro Quartil (Q1): {q1:.2f}")

# Para Q3: Mediana da segunda metade dos dados
# Se o número de elementos for ímpar, o elemento mediano é excluído de ambas as metades.
# Se for par, as metades são simplesmente divididas.
segunda_metade = notas_ordenadas[mid_point:]
if len(notas_ordenadas) % 2 == 1: # Se o tamanho total é ímpar, exclua o elemento do meio da segunda metade
    segunda_metade = notas_ordenadas[mid_point + 1:]

q3 = statistics.median(segunda_metade)
print(f"Terceiro Quartil (Q3): {q3:.2f}")

# Amplitude Interquartil (IQR)
iqr = q3 - q1
print(f"Amplitude Interquartil (IQR = Q3 - Q1): {iqr:.2f}")
print("\n")


# 4. Interpretação e Conclusão

print("--- Interpretação e Conclusão ---")
print("Observações gerais sobre as notas:")
print(f"- A **média das notas ({media_notas:.2f})** indica o desempenho central do grupo.")
print(f"- A **mediana ({mediana_notas:.2f})** é muito próxima da média, sugerindo que a distribuição das notas é relativamente simétrica, apesar de alguns valores extremos.")
print(f"- O **desvio padrão (amostral: {desvio_padrao_amostral:.2f}, populacional: {desvio_padrao_populacional:.2f})** mostra que as notas variam bastante em torno da média, indicando uma dispersão significativa.")

print("\nAnálise dos Quartis:")
print(f"- **Q1 ({q1:.2f}):** 25% dos alunos tiveram notas iguais ou inferiores a {q1:.2f}. Isso significa que 25% da turma teve um desempenho considerado baixo.")
print(f"- **Mediana (Q2: {mediana_notas:.2f}):** 50% dos alunos tiveram notas iguais ou inferiores a {mediana_notas:.2f}. Este é o ponto médio da distribuição.")
print(f"- **Q3 ({q3:.2f}):** 75% dos alunos tiveram notas iguais ou inferiores a {q3:.2f} (ou 25% tiveram notas acima de {q3:.2f}). Isso mostra o limite superior do desempenho da maioria dos alunos.")
print(f"- A **Amplitude Interquartil (IQR) de {iqr:.2f}** representa o intervalo onde se encontram os 50% centrais dos dados, sendo uma medida robusta de dispersão, menos sensível a outliers.")

print("\nSobre os Desvios Padrão (Amostral vs. Populacional):")
print("Se considerarmos estas notas como a *população completa* de alunos para este teste, o desvio padrão **populacional (`pstdev`)** seria mais apropriado.")
print("No entanto, se esta turma for apenas uma *amostra* de um universo maior de alunos que fazem este teste, o desvio padrão **amostral (`stdev`)** seria a escolha correta, pois ele fornece uma estimativa não viciada da variabilidade da população maior.")
print("A diferença é pequena para amostras grandes, mas conceitualmente importante.")

print("\nConclusão final:")
print("A análise das notas revela uma ampla gama de desempenhos, com alguns alunos apresentando dificuldades (notas abaixo de Q1) e outros se destacando (notas acima de Q3). A dispersão indicada pelo desvio padrão e IQR sugere que o teste pode ter sido desafiador ou que há uma grande heterogeneidade no aprendizado dos alunos.")